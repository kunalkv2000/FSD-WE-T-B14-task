-------- Database Creating Query -----------

create database ecommerce ;

-------- Indicates which Database is going to use -----------

use ecommerce;

-------- customer table -----------

create table customers (
id int NOT NULL AUTO_INCREMENT,
name varchar(20),
email varchar(30),
address varchar(250),
PRIMARY KEY (id	)
);

insert into customers (name, email, addresss) values
('Kunal','kunal@sample.com','Chennai'),
('Kanna','kanna@sample.com','Vellore'),
('Kamal','kamal@sample.com','coimbatore'),
('Raj','raj@sample.com','trichy'),
('Hamdan','hamdan@sample.com','Chennai'),
('Roshan','roshan@sample.com','Chennai'),
('Refay','refay@sample.com','Chennai')

-------- order table -----------

create table orders (
id int NOT NULL AUTO_INCREMENT,
customer_id int,
order_date date,
total_amount int,
PRIMARY KEY (id	),
FOREIGN KEY (customer_id) REFERENCES customers(id)
);

insert into orders (customer_id, order_date, total_amount) values
(1 ,'2025-06-15', 5000),
(2 ,'2025-07-01', 1000),
(3 ,'2025-07-20', 500),
(4 ,'2025-07-35', 3000),
(5 ,'2025-08-15', 2000),
(6 ,'2025-09-01', 10000),
(7 ,'2025-08-30', 3500)

-------- product table -----------

create table products (
id int NOT NULL AUTO_INCREMENT,
name varchar(30),
price int,
description varchar(300),
PRIMARY KEY (id)
);

insert into products (prod_name, price, prod_description) values
('Product A', 400, 'Product A refers to a product which is highly demanding.'),
('Product B', 300, 'Product B refers to a product which is moderatly demanding.'),
('Product C', 100, 'Product C refers to a product which is low demanding.')

--------- Solutions -------------

1)	select * from customers where order_date between (SELECT dateadd(dd,-30,cast(getdate() as date))) and (SELECT CAST( GETDATE() AS Date ));

2)	select b.name as customer, sum(total_amount) from orders a left join customers b on a.customer_id = b.id group by b.name;

3)	UPDATE products SET price = 45 WHERE name = 'Product C';

4)	ALTER TABLE products ADD discount integer;

5)	select * from products order by price desc limit 3;

6)	select b.name from order_items a 
	join customers b on b.id = a.customer_id 
	join products c on c.id = a.product_id
	where c.name = 'Product A'

7)	select a.name, b.order_date from customers a join orders b on a.id = b.customer_id;

8)	select * from orders where total_amount >= 150;

9)	CREATE TABLE order_items (
    items_id AUTO_INCREMENT,
	cutomer_id INT,
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    price INT,
	PRIMARY KEY (items_id),
    FOREIGN KEY (order_id) REFERENCES orders(id);

	UPDATE orders SET id = oi.order_id 
	FROM order_items oi
	WHERE oi.order_id = orders.id;

10)	select avg(total_amount) from orders
